@use 'sass:map';
@use '~@angular/material' as mat;

$my-primary-palette: mat.define-palette(mat.$purple-palette);
$my-accent-palette: mat.define-palette(mat.$green-palette);
$my-dark-theme: mat.define-dark-theme((
  color: (
    primary: mat.define-palette(mat.$purple-palette),
    accent: mat.define-palette(mat.$green-palette),
  )
  ));
$my-light-theme: mat.define-light-theme((
  color: (
    primary: mat.define-palette(mat.$purple-palette),
    accent: mat.define-palette(mat.$amber-palette),
    )
));

$themes: (
  dark: $my-dark-theme,
  light: $my-light-theme
);

$backgrounds: (
  dark: mat.$dark-theme-background-palette,
  light: mat.$light-theme-background-palette,
);

$foregrounds: (
  dark: mat.$dark-theme-foreground-palette,
  light: mat.$light-theme-foreground-palette,
);

@function get-color-from-theme($theme, $color) {
  $chosen-theme: map.get($themes, $theme);
  $color-config: mat.get-color-config($chosen-theme);
  $chosen-palette: map.get($color-config, $color);
  $color: mat.get-color-from-palette($chosen-palette, 500);
  @return $color;
}

@function get-background-from-theme($theme, $value) {
  $background: map.get($backgrounds, $theme);
  $color: map.get($background, $value);
  @return $color;
}

@function get-foreground-from-theme($theme, $value) {
  $foreground: map.get($foregrounds, $theme);
  $color: map.get($foreground, $value);
  @return $color;
}

@function get-theme($theme) {
  @return map.get($themes, $theme);
}

@mixin apply-theme($theme) {
  background-color: get-background-from-theme($theme, background);
  color: get-foreground-from-theme($theme, base);
}
